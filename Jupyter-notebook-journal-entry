{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "81dafa9c-4d44-4039-9fb8-6ea8978f44d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import sys\n",
    "\n",
    "def main():\n",
    "\n",
    "    y_sin = np.sin(x)\n",
    "    y_cos = np.cos(x)\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e284e108-4c7e-4576-83ea-d06879026cd8",
   "metadata": {},
   "source": [
    "the first cell establishes a function as def main and imports numpy as np. This also defines sin and cos from numpy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e0082c91-df95-4cba-8cd1-14235cff28c1",
   "metadata": {},
   "outputs": [],
   "source": [
    " x = np.linspace(0, 2* np.pi, 10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40acc3e2-60d1-41c7-a67b-201edc9ef356",
   "metadata": {},
   "source": [
    "this crerates the tabulation of x of 10 entrys between 0 and 2pi."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "66de8cef-647f-442f-b951-bad0e4fe63b2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        sin(x)     cos(x)\n",
      "-------------------------------------\n"
     ]
    }
   ],
   "source": [
    "print(\"        sin(x)     cos(x)\")\n",
    "\n",
    "print(\"-------------------------------------\")\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cee5fa6-6b66-4849-b89c-f2fae340eecf",
   "metadata": {},
   "source": [
    "sets the frame for the colloms of data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a5acba03-cba6-4a03-8619-4119ac2c938c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.00000\t 1.00000\n",
      "0.64279\t 0.76604\n",
      "0.98481\t 0.17365\n",
      "0.86603\t -0.50000\n",
      "0.34202\t -0.93969\n",
      "-0.34202\t -0.93969\n",
      "-0.86603\t -0.50000\n",
      "-0.98481\t 0.17365\n",
      "-0.64279\t 0.76604\n",
      "-0.00000\t 1.00000\n"
     ]
    }
   ],
   "source": [
    "#y_sin = np.sin(x)\n",
    "y_sin = np.sin(x)\n",
    "y_cos = np.cos(x)\n",
    "for i in range(10): \n",
    "        print(f\"{y_sin[i]:.5f}\\t {y_cos[i]:.5f}\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "47c4cc5d-202d-492d-a68a-2649a64e540a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a7368e28-dda2-4ed1-a566-dab8b1dad655",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
